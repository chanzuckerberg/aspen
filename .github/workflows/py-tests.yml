# This workflow will install Python dependencies and run tests with a single version of Python

name: py-tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

# Because of https://github.com/actions/runner/issues/353, we need to explicitly set the shell to bash to get sane defaults (-o pipefail).
defaults:
  run:
    shell: bash

jobs:
  py-code-style:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Set up Python 3.9
        id: setup
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: xpy-tests-code-style-v1-${{ runner.os }}-${{ steps.setup.outputs.python-version }}-${{ hashFiles('.github/workflows/py-tests.yml') }}
      - name: Install and upgrade pip
        if: steps.cache-deps.outputs.cache-hit != 'true'
        working-directory: src/py
        run: |
          python -m pip install pipenv
          pip install $(pipenv lock --requirements --dev | egrep '^(flake8|black|isort|mypy|sqlalchemy-stubs)==')
      - name: Verify code style
        run: |
          make -k style

  py-tests:
    runs-on: ubuntu-latest
    needs: py-code-style

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        id: setup
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Pull the docker image
        run: |
          docker pull czbiohub/covidhub-postgres:13.1-alpine
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: py-tests-tests-v1-${{ runner.os }}-${{ steps.setup.outputs.python-version }}-${{ hashFiles('src/py/setup.py', 'src/py/requirements-dev.txt', '.github/workflows/py-tests.yml') }}
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        working-directory: src/py
        run: |
          python -m pip install pipenv
          pipenv install --system --dev
      - name: Install aspen
        working-directory: src/py
        run: |
          pip install -e .
      - name: Run with pytest
        run: |
          rm src/py/__init__.py  # TODO - this is a stopgap that we should remove ASAP
          pytest -n4
