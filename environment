# Resolve the location of this file and set APP_HOME to the root
if [[ -n "$ZSH_VERSION" ]]; then
    export APP_HOME=${0:A:h}
else
    SOURCE="${BASH_SOURCE[0]}"
    while [ -h "$SOURCE" ] ; do SOURCE="$(readlink "$SOURCE")"; done
    export APP_HOME="$(cd -P "$(dirname "$SOURCE")" && pwd)"
fi

set -a
APP_NAME=aspen
DEPLOYMENT_ENVIRONMENT="${DEPLOYMENT_ENVIRONMENT:-dev}"
TF_DATA_DIR=".terraform.${DEPLOYMENT_ENVIRONMENT}"
AWS_DEFAULT_REGION=$(aws configure get region)
AWS_ACCOUNT_ID=$(aws sts get-caller-identity 2> /dev/null | jq -r .Account)
if [ "$AWS_ACCOUNT_ID" = "" ]; then
    echo "ERROR: Could not get identity.  Do you need to set AWS_PROFILE or AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY?"
    return 1
fi
TFSTATE_FILE="${TF_DATA_DIR}/remote.tfstate"
EXPECT_ALIAS=${EXPECT_AWS_ACCOUNT_ALIAS:-genepi-dev}
AWS_ACCOUNT_ALIAS=$(aws iam list-account-aliases | jq -r '.AccountAliases[0]')
if [[ $AWS_ACCOUNT_ALIAS != $EXPECT_ALIAS ]]; then
    echo "ERROR: Expected to be in AWS account $EXPECT_ALIAS, but got $AWS_ACCOUNT_ALIAS" 1>&2
    echo "ERROR: If this is expected, set the EXPECT_AWS_ACCOUNT_ALIAS environment variable" 1>&2
    unset APP_HOME APP_NAME DEPLOYMENT_ENVIRONMENT TF_DATA_DIR TFSTATE_FILE
    return
fi

TF_CLI_ARGS_output="--state ${TFSTATE_FILE}"
TF_CLI_ARGS_init="--backend-config ${APP_HOME}/${TF_DATA_DIR}/aws_config.json"

# See https://github.com/terraform-providers/terraform-provider-aws/issues/1184
AWS_SDK_LOAD_CONFIG=1

TF_S3_BUCKET=tfstate-$AWS_ACCOUNT_ID

EXPORT_ENV_VARS_TO_TF="APP_NAME DEPLOYMENT_ENVIRONMENT AWS_ACCOUNT_ID AWS_ACCOUNT_ALIAS AWS_DEFAULT_REGION"
set +a

for v in $( echo "$EXPORT_ENV_VARS_TO_TF" ); do
    if [[ -n "$ZSH_VERSION" ]]; then
        echo "variable $v { default = \"${(P)v}\" }";
    else
        echo "variable $v { default = \"${!v}\" }";
    fi
done >| "${APP_HOME}/terraform/variables.tf"
